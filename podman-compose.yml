version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: docker.io/postgres:15-alpine
    container_name: payment-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-procesador_pagos_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-a}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data:Z
    ports:
      - "5432:5432"
    networks:
      - payment-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d procesador_pagos_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Aplicaci√≥n PaymentBanregio
  payment-app:
    build: 
      context: .
      dockerfile: Containerfile
    container_name: payment-banregio
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - payment-network
    environment:
      # Spring Profile
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      TZ: America/Mexico_City
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-procesador_pagos_db}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-a}
      
      # Azure/Microsoft Graph
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_USER_ID: ${AZURE_USER_ID}
      
      # NetSuite
      NETSUITE_ACCOUNT_ID: ${NETSUITE_ACCOUNT_ID}
      NETSUITE_CONSUMER_KEY: ${NETSUITE_CONSUMER_KEY}
      NETSUITE_CONSUMER_SECRET: ${NETSUITE_CONSUMER_SECRET}
      NETSUITE_TOKEN_ID: ${NETSUITE_TOKEN_ID}
      NETSUITE_TOKEN_SECRET: ${NETSUITE_TOKEN_SECRET}
      
      # Webhook Configuration
      WEBHOOK_NOTIFICATION_URL: ${WEBHOOK_NOTIFICATION_URL}
      WEBHOOK_AUTO_CREATE: ${WEBHOOK_AUTO_CREATE:-true}
      
      # JVM Options optimized for Windows Server + Podman
      JAVA_OPTS: ${JAVA_OPTS:--Xmx1024m -Xms512m -XX:+UseG1GC -XX:+UseContainerSupport}
      
    volumes:
      - app_logs:/app/logs:Z
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 90s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

networks:
  payment-network:
    driver: bridge
    name: payment-network

volumes:
  postgres_data:
    driver: local
    name: payment-postgres-data
  app_logs:
    driver: local
    name: payment-app-logs