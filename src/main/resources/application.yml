# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-message: always

#PostgreSQL DB
spring:
  application:
    name: PaymentBanregio
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:procesador_pagos_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:a}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 600000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

# Microsoft Graph API for reading emails
azure:
  graph:
    tenant-id: ${AZURE_TENANT_ID:0f3dc3aa-441d-4e6a-b1d3-c4a0e2313462}
    client-id: ${AZURE_CLIENT_ID:fad67f80-1180-4504-8ad5-5d87bb79022c}
    client-secret: ${AZURE_CLIENT_SECRET:A558Q~W6Gdj3D6M5SwvgTOCxOJa0zq7oRtxC1cRq}
    user-id: ${AZURE_USER_ID:5a4146ec-ee2f-4009-8adf-3eda7e1aaee3}

# NetSuite Configuration
netsuite:
  api:
    account-id: ${NETSUITE_ACCOUNT_ID:9519366-sb1}
    consumer-key: ${NETSUITE_CONSUMER_KEY:ce6a9c35977890b311ea7f7c674a9fdb911204bc347a8ad32814144199fb126e}
    consumer-secret: ${NETSUITE_CONSUMER_SECRET:d858eb7cc673e8631b94d06a496e59b6be57a6369a73becd60b25360c3c86bf8}
    token-id: ${NETSUITE_TOKEN_ID:18ebaa5d564c96c240a4051d8c37f84a61f046144ffafbcd3a01adcc5922f4b5}
    token-secret: ${NETSUITE_TOKEN_SECRET:5ec39768aa38e879b2f6b29ef1e5cf2a632663be3f6cffb14b7f538a1ba5c9f9}

# Webhook Configuration
webhook:
  notification-url: ${WEBHOOK_NOTIFICATION_URL:http://localhost:8080/api/v1/webhooks/notifications}
  auto-create: ${WEBHOOK_AUTO_CREATE:true}
  validation:
    enabled: true
    client-state: PaymentBanregioSecret2024

# Logging Configuration
logging:
  level:
    root: INFO
    com.mausoleos.PaymentBanregio: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"

# Health Check
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

webhook:
  notification-url: ${WEBHOOK_NOTIFICATION_URL:https://tu-ngrok-url.ngrok-free.app/api/v1/webhooks/notifications}

logging:
  level:
    com.mausoleos.PaymentBanregio: DEBUG

---
# Production Profile  
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
  datasource:
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5

# En producción, la URL será la IP del servidor + puerto
webhook:
  notification-url: ${WEBHOOK_NOTIFICATION_URL:http://YOUR_SERVER_IP:8080/api/v1/webhooks/notifications}

logging:
  level:
    root: WARN
    com.mausoleos.PaymentBanregio: INFO